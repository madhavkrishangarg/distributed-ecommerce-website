# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import market_pb2 as market__pb2


class MarketplaceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.registerSeller = channel.unary_unary(
                '/marketplace.Marketplace/registerSeller',
                request_serializer=market__pb2.registerSellerRequest.SerializeToString,
                response_deserializer=market__pb2.registerSellerResponse.FromString,
                )
        self.sellItem = channel.unary_unary(
                '/marketplace.Marketplace/sellItem',
                request_serializer=market__pb2.sellItemRequest.SerializeToString,
                response_deserializer=market__pb2.sellItemResponse.FromString,
                )
        self.updateItem = channel.unary_unary(
                '/marketplace.Marketplace/updateItem',
                request_serializer=market__pb2.updateItemRequest.SerializeToString,
                response_deserializer=market__pb2.updateItemResponse.FromString,
                )
        self.deleteItem = channel.unary_unary(
                '/marketplace.Marketplace/deleteItem',
                request_serializer=market__pb2.deleteItemRequest.SerializeToString,
                response_deserializer=market__pb2.deleteItemResponse.FromString,
                )
        self.displaySellerItems = channel.unary_stream(
                '/marketplace.Marketplace/displaySellerItems',
                request_serializer=market__pb2.displaySellerItemsRequest.SerializeToString,
                response_deserializer=market__pb2.Item.FromString,
                )
        self.searchItem = channel.unary_stream(
                '/marketplace.Marketplace/searchItem',
                request_serializer=market__pb2.searchItemRequest.SerializeToString,
                response_deserializer=market__pb2.Item.FromString,
                )
        self.buyItem = channel.unary_unary(
                '/marketplace.Marketplace/buyItem',
                request_serializer=market__pb2.buyItemRequest.SerializeToString,
                response_deserializer=market__pb2.buyItemResponse.FromString,
                )
        self.addToWishlist = channel.unary_unary(
                '/marketplace.Marketplace/addToWishlist',
                request_serializer=market__pb2.addToWishlistRequest.SerializeToString,
                response_deserializer=market__pb2.addToWishlistResponse.FromString,
                )
        self.rateItem = channel.unary_unary(
                '/marketplace.Marketplace/rateItem',
                request_serializer=market__pb2.rateItemRequest.SerializeToString,
                response_deserializer=market__pb2.rateItemResponse.FromString,
                )
        self.notifySeller = channel.unary_unary(
                '/marketplace.Marketplace/notifySeller',
                request_serializer=market__pb2.notifySellerRequest.SerializeToString,
                response_deserializer=market__pb2.notifySellerResponse.FromString,
                )
        self.notifyBuyer = channel.unary_unary(
                '/marketplace.Marketplace/notifyBuyer',
                request_serializer=market__pb2.notifyBuyerRequest.SerializeToString,
                response_deserializer=market__pb2.notifyBuyerResponse.FromString,
                )


class MarketplaceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def registerSeller(self, request, context):
        """Seller
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def sellItem(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def updateItem(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deleteItem(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def displaySellerItems(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def searchItem(self, request, context):
        """Buyer
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def buyItem(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def addToWishlist(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def rateItem(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def notifySeller(self, request, context):
        """Buyer and Seller
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def notifyBuyer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MarketplaceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'registerSeller': grpc.unary_unary_rpc_method_handler(
                    servicer.registerSeller,
                    request_deserializer=market__pb2.registerSellerRequest.FromString,
                    response_serializer=market__pb2.registerSellerResponse.SerializeToString,
            ),
            'sellItem': grpc.unary_unary_rpc_method_handler(
                    servicer.sellItem,
                    request_deserializer=market__pb2.sellItemRequest.FromString,
                    response_serializer=market__pb2.sellItemResponse.SerializeToString,
            ),
            'updateItem': grpc.unary_unary_rpc_method_handler(
                    servicer.updateItem,
                    request_deserializer=market__pb2.updateItemRequest.FromString,
                    response_serializer=market__pb2.updateItemResponse.SerializeToString,
            ),
            'deleteItem': grpc.unary_unary_rpc_method_handler(
                    servicer.deleteItem,
                    request_deserializer=market__pb2.deleteItemRequest.FromString,
                    response_serializer=market__pb2.deleteItemResponse.SerializeToString,
            ),
            'displaySellerItems': grpc.unary_stream_rpc_method_handler(
                    servicer.displaySellerItems,
                    request_deserializer=market__pb2.displaySellerItemsRequest.FromString,
                    response_serializer=market__pb2.Item.SerializeToString,
            ),
            'searchItem': grpc.unary_stream_rpc_method_handler(
                    servicer.searchItem,
                    request_deserializer=market__pb2.searchItemRequest.FromString,
                    response_serializer=market__pb2.Item.SerializeToString,
            ),
            'buyItem': grpc.unary_unary_rpc_method_handler(
                    servicer.buyItem,
                    request_deserializer=market__pb2.buyItemRequest.FromString,
                    response_serializer=market__pb2.buyItemResponse.SerializeToString,
            ),
            'addToWishlist': grpc.unary_unary_rpc_method_handler(
                    servicer.addToWishlist,
                    request_deserializer=market__pb2.addToWishlistRequest.FromString,
                    response_serializer=market__pb2.addToWishlistResponse.SerializeToString,
            ),
            'rateItem': grpc.unary_unary_rpc_method_handler(
                    servicer.rateItem,
                    request_deserializer=market__pb2.rateItemRequest.FromString,
                    response_serializer=market__pb2.rateItemResponse.SerializeToString,
            ),
            'notifySeller': grpc.unary_unary_rpc_method_handler(
                    servicer.notifySeller,
                    request_deserializer=market__pb2.notifySellerRequest.FromString,
                    response_serializer=market__pb2.notifySellerResponse.SerializeToString,
            ),
            'notifyBuyer': grpc.unary_unary_rpc_method_handler(
                    servicer.notifyBuyer,
                    request_deserializer=market__pb2.notifyBuyerRequest.FromString,
                    response_serializer=market__pb2.notifyBuyerResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'marketplace.Marketplace', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Marketplace(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def registerSeller(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/marketplace.Marketplace/registerSeller',
            market__pb2.registerSellerRequest.SerializeToString,
            market__pb2.registerSellerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def sellItem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/marketplace.Marketplace/sellItem',
            market__pb2.sellItemRequest.SerializeToString,
            market__pb2.sellItemResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def updateItem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/marketplace.Marketplace/updateItem',
            market__pb2.updateItemRequest.SerializeToString,
            market__pb2.updateItemResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def deleteItem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/marketplace.Marketplace/deleteItem',
            market__pb2.deleteItemRequest.SerializeToString,
            market__pb2.deleteItemResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def displaySellerItems(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/marketplace.Marketplace/displaySellerItems',
            market__pb2.displaySellerItemsRequest.SerializeToString,
            market__pb2.Item.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def searchItem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/marketplace.Marketplace/searchItem',
            market__pb2.searchItemRequest.SerializeToString,
            market__pb2.Item.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def buyItem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/marketplace.Marketplace/buyItem',
            market__pb2.buyItemRequest.SerializeToString,
            market__pb2.buyItemResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def addToWishlist(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/marketplace.Marketplace/addToWishlist',
            market__pb2.addToWishlistRequest.SerializeToString,
            market__pb2.addToWishlistResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def rateItem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/marketplace.Marketplace/rateItem',
            market__pb2.rateItemRequest.SerializeToString,
            market__pb2.rateItemResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def notifySeller(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/marketplace.Marketplace/notifySeller',
            market__pb2.notifySellerRequest.SerializeToString,
            market__pb2.notifySellerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def notifyBuyer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/marketplace.Marketplace/notifyBuyer',
            market__pb2.notifyBuyerRequest.SerializeToString,
            market__pb2.notifyBuyerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
